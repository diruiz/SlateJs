{"version":3,"sources":["Components/Menu/Menu.js","Components/MarkButton/MarkButton.js","Icons/Icons.js","Components/Element/Element.js","Components/Leaf/Leaf.js","Utility/Tools.js","Utility/Lists.js","Components/BlockButton/BlockButton.js","Services/Article.services.js","Utility/helper.js","Components/Slate/RichTextEditor.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","className","children","isMarkActive","editor","format","marks","Editor","MarkButton","useSlate","onClick","click","style","color","Icons","Bold","icon","faBold","Code","faCode","Image","faImage","Italic","faItalic","OrderedList","faListOl","Quote","faQuoteRight","Save","faSave","Underline","faUnderline","UnorderedList","faListUl","Video","faVideo","attributes","element","selected","useSelected","focused","useFocused","contentEditable","src","url","boxShadow","width","height","allowfullscreen","Element","type","Leaf","leaf","bold","code","italic","underline","isImageUrl","isUrl","ext","URL","pathname","split","pop","imageExtensions","includes","test","LIST_TYPES","isBlockActive","nodes","match","n","isEditor","SlateElement","isElement","toggleBlock","isActive","isList","Transforms","unwrapNodes","newProperties","setNodes","block","wrapNodes","BlockButton","event","preventDefault","addArticle","article","a","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","console","log","fetch","result","json","data","RichTextEditor","useState","withImages","withHistory","withReact","createEditor","initialValue","value","setValue","renderElement","useCallback","renderLeaf","onChange","CustomEditor","toggleBoldMark","toggleItalicMark","toggleUnderlineMark","window","prompt","insertImage","alert","insertVideo","articleName","country","name","cdsContent","content","then","catch","error","toString","response","ok","text","onKeyDown","localStorage","setItem","ctrlKey","key","toggleCodeBlock","insertData","isVoid","getData","files","length","file","reader","FileReader","addEventListener","readAsDataURL","image","insertNodes","isBoldMarkActive","universal","isItalicMarkActive","isUnderlineMarkActive","isCodeBlockActive","Text","isText","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba217a45.chunk.js","sourcesContent":["import './Menu.css';\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <div className=\"menu-container\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;","import './MarkButton.css';\r\nimport { Editor } from 'slate';\r\nimport { useSlate } from \"slate-react\";\r\n\r\nfunction MarkButton(props) {\r\n  const editor = useSlate();\r\n  return (\r\n    <button\r\n      className=\"mark-button\"\r\n      onClick={props.click}\r\n      style={{ color: isMarkActive(editor, props.format) ? 'black' : '#aaa' }} >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nconst isMarkActive = (editor, format) => {\r\n  if (!format) {\r\n    return true;\r\n  }\r\n  const marks = Editor.marks(editor);\r\n  return marks ? marks[format] === true : false;\r\n}\r\n\r\nexport default MarkButton;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBold, faCode, faImage, faItalic, faListOl, faListUl, faQuoteRight, faSave, faUnderline, faVideo } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Icons = {\r\n  Bold: <FontAwesomeIcon icon={faBold} />,\r\n  Code: <FontAwesomeIcon icon={faCode} />,\r\n  Image: <FontAwesomeIcon icon={faImage} />,\r\n  Italic: <FontAwesomeIcon icon={faItalic} />,\r\n  OrderedList: <FontAwesomeIcon icon={faListOl} />,\r\n  Quote: <FontAwesomeIcon icon={faQuoteRight} />,\r\n  Save: <FontAwesomeIcon icon={faSave} />,\r\n  Underline: <FontAwesomeIcon icon={faUnderline} />,\r\n  UnorderedList: <FontAwesomeIcon icon={faListUl} />,\r\n  Video: <FontAwesomeIcon icon={faVideo} />,\r\n}\r\n\r\nexport default Icons;","import { useFocused, useSelected } from \"slate-react\"\r\n\r\nconst Element = (props) => {\r\n  const { attributes, children, element } = props;\r\n  switch (element.type) {\r\n    case 'block-quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'code':\r\n      return (\r\n        <pre {...attributes}>\r\n          <code>{children}</code>\r\n        </pre>\r\n      )\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'iframe':\r\n      return <Video {...props} />\r\n    case 'image':\r\n      return <Image {...props} />\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n\r\nconst Image = ({ attributes, children, element }) => {\r\n  const selected = useSelected()\r\n  const focused = useFocused()\r\n  return (\r\n    <div {...attributes}>\r\n      <div contentEditable={false}>\r\n        <img\r\n          src={element.url}\r\n          className=\"image-style\"\r\n          style={{\r\n            boxShadow: selected && focused ? '0 0 0 3px #B4D5FF' : 'none'\r\n          }}\r\n        />\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Video = ({ attributes, children, element }) => {\r\n  const selected = useSelected()\r\n  const focused = useFocused()\r\n  return (\r\n    <div {...attributes}>\r\n      <div contentEditable={false}>\r\n        <iframe\r\n          src={element.url}\r\n          className=\"iframe-style\"\r\n          style={{\r\n            boxShadow: selected && focused ? '0 0 0 3px #B4D5FF' : 'none'\r\n          }}\r\n          width=\"560\"\r\n          height=\"315\"\r\n          allowfullscreen=\"true\"\r\n        />\r\n      </div>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Element;","const Leaf = ({ attributes, children, leaf }) => {\r\n  if (leaf.bold) {\r\n    children = <strong>{children}</strong>\r\n  }\r\n\r\n  if (leaf.code) {\r\n    children = <code>{children}</code>\r\n  }\r\n\r\n  if (leaf.italic) {\r\n    children = <em>{children}</em>\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    children = <u>{children}</u>\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nexport default Leaf;","export const isImageUrl = url => {\r\n  if (!url) {\r\n    return false;\r\n  }\r\n  if (!isUrl(url)) {\r\n    return false;\r\n  }\r\n  const ext = new URL(url).pathname.split('.').pop();\r\n  return imageExtensions.includes(ext);\r\n}\r\n\r\nexport const isUrl = url => {\r\n  if (!url) {\r\n    return false;\r\n  }\r\n  const regexUrl = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\r\n  return regexUrl.test(url);\r\n}\r\n\r\nexport const imageExtensions = [\r\n  \"ase\",\r\n  \"art\",\r\n  \"bmp\",\r\n  \"blp\",\r\n  \"cd5\",\r\n  \"cit\",\r\n  \"cpt\",\r\n  \"cr2\",\r\n  \"cut\",\r\n  \"dds\",\r\n  \"dib\",\r\n  \"djvu\",\r\n  \"egt\",\r\n  \"exif\",\r\n  \"gif\",\r\n  \"gpl\",\r\n  \"grf\",\r\n  \"icns\",\r\n  \"ico\",\r\n  \"iff\",\r\n  \"jng\",\r\n  \"jpeg\",\r\n  \"jpg\",\r\n  \"jfif\",\r\n  \"jp2\",\r\n  \"jps\",\r\n  \"lbm\",\r\n  \"max\",\r\n  \"miff\",\r\n  \"mng\",\r\n  \"msp\",\r\n  \"nitf\",\r\n  \"ota\",\r\n  \"pbm\",\r\n  \"pc1\",\r\n  \"pc2\",\r\n  \"pc3\",\r\n  \"pcf\",\r\n  \"pcx\",\r\n  \"pdn\",\r\n  \"pgm\",\r\n  \"PI1\",\r\n  \"PI2\",\r\n  \"PI3\",\r\n  \"pict\",\r\n  \"pct\",\r\n  \"pnm\",\r\n  \"pns\",\r\n  \"ppm\",\r\n  \"psb\",\r\n  \"psd\",\r\n  \"pdd\",\r\n  \"psp\",\r\n  \"px\",\r\n  \"pxm\",\r\n  \"pxr\",\r\n  \"qfx\",\r\n  \"raw\",\r\n  \"rle\",\r\n  \"sct\",\r\n  \"sgi\",\r\n  \"rgb\",\r\n  \"int\",\r\n  \"bw\",\r\n  \"tga\",\r\n  \"tiff\",\r\n  \"tif\",\r\n  \"vtf\",\r\n  \"xbm\",\r\n  \"xcf\",\r\n  \"xpm\",\r\n  \"3dv\",\r\n  \"amf\",\r\n  \"ai\",\r\n  \"awg\",\r\n  \"cgm\",\r\n  \"cdr\",\r\n  \"cmx\",\r\n  \"dxf\",\r\n  \"e2d\",\r\n  \"egt\",\r\n  \"eps\",\r\n  \"fs\",\r\n  \"gbr\",\r\n  \"odg\",\r\n  \"svg\",\r\n  \"stl\",\r\n  \"vrml\",\r\n  \"x3d\",\r\n  \"sxd\",\r\n  \"v2d\",\r\n  \"vnd\",\r\n  \"wmf\",\r\n  \"emf\",\r\n  \"art\",\r\n  \"xar\",\r\n  \"png\",\r\n  \"webp\",\r\n  \"jxr\",\r\n  \"hdp\",\r\n  \"wdp\",\r\n  \"cur\",\r\n  \"ecw\",\r\n  \"iff\",\r\n  \"lbm\",\r\n  \"liff\",\r\n  \"nrrd\",\r\n  \"pam\",\r\n  \"pcx\",\r\n  \"pgf\",\r\n  \"sgi\",\r\n  \"rgb\",\r\n  \"rgba\",\r\n  \"bw\",\r\n  \"int\",\r\n  \"inta\",\r\n  \"sid\",\r\n  \"ras\",\r\n  \"sun\",\r\n  \"tga\"\r\n];\r\n\r\n","export const LIST_TYPES = ['numbered-list', 'bulleted-list'];","import {\r\n  Editor,\r\n  Transforms,\r\n  Element as SlateElement,\r\n} from 'slate'\r\nimport { useSlate } from \"slate-react\";\r\nimport { LIST_TYPES } from \"../../Utility/Lists\";\r\n\r\nfunction BlockButton(props) {\r\n  const editor = useSlate();\r\n  return (\r\n    <button\r\n      className=\"mark-button\"\r\n      style={{ color: isBlockActive(editor, props.format) ? 'black' : '#aaa' }}\r\n      onClick={event => {\r\n        event.preventDefault()\r\n        toggleBlock(editor, props.format)\r\n      }} >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n =>\r\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\r\n  })\r\n  return !!match\r\n}\r\n\r\n\r\nconst toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format)\r\n  const isList = LIST_TYPES.includes(format)\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n =>\r\n      LIST_TYPES.includes(\r\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\r\n      ),\r\n    split: true,\r\n  })\r\n  const newProperties = {\r\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n  }\r\n  Transforms.setNodes(editor, newProperties)\r\n\r\n  if (!isActive && isList) {\r\n    const block = { type: format, children: [] }\r\n    Transforms.wrapNodes(editor, block)\r\n  }\r\n}\r\n\r\n\r\nexport default BlockButton;","import { mainUrl } from \"../Utility/helper\";\r\n\r\n\r\nexport const addArticle = async (article) => {\r\n  let myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  const url = `${mainUrl}Cds/Article`;\r\n  const raw = JSON.stringify(article);\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: \"follow\"\r\n  };\r\n  console.log(raw);\r\n\r\n  const result = await fetch(url, requestOptions);\r\n  const data = await result.json();\r\n  return data;\r\n}","export const mainUrl = 'https://beta.directv.com.co/coverage/';\r\n\r\n","import React, { useState, useCallback } from 'react';\r\nimport { createEditor, Editor, Text, Transforms } from 'slate';\r\nimport { withHistory } from 'slate-history';\r\nimport { Slate, Editable, withReact } from 'slate-react';\r\nimport Menu from '../Menu/Menu';\r\nimport MarkButton from '../MarkButton/MarkButton';\r\nimport Icons from '../../Icons/Icons';\r\nimport Element from '../Element/Element';\r\nimport Leaf from '../Leaf/Leaf';\r\nimport { isImageUrl, isUrl } from '../../Utility/Tools';\r\nimport BlockButton from '../BlockButton/BlockButton';\r\nimport { addArticle } from '../../Services/Article.services';\r\n\r\nfunction RichTextEditor(props) {\r\n\r\n  const [editor] = useState(withImages(withHistory(withReact(createEditor()))), [])\r\n  //const editor = useMemo(() => withReact(createEditor()), [])\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const renderElement = useCallback(props => <Element {...props} />, []);\r\n\r\n  const renderLeaf = useCallback(props => <Leaf {...props} />, []);\r\n\r\n  return (\r\n    // Add a toolbar with buttons that call the same methods.\r\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\r\n      <Menu>\r\n        <MarkButton format=\"bold\" click={\r\n          event => {\r\n            event.preventDefault()\r\n            CustomEditor.toggleBoldMark(editor)\r\n          }}>{Icons.Bold}</MarkButton>\r\n        <MarkButton format=\"italic\" click={\r\n          event => {\r\n            event.preventDefault()\r\n            CustomEditor.toggleItalicMark(editor)\r\n          }}>{Icons.Italic}</MarkButton>\r\n        <MarkButton format=\"underline\" click={\r\n          event => {\r\n            event.preventDefault()\r\n            CustomEditor.toggleUnderlineMark(editor)\r\n          }}>{Icons.Underline}</MarkButton>\r\n        {/* <MarkButton format=\"code\" click={\r\n          event => {\r\n            event.preventDefault()\r\n            CustomEditor.toggleCodeBlock(editor)\r\n          }}>{Icons.Code}</MarkButton> */}\r\n        <MarkButton click={\r\n          event => {\r\n            const url = window.prompt('Enter the URL of the image:')\r\n            if (url && !isImageUrl(url)) {\r\n              alert('URL is not an image')\r\n              return\r\n            }\r\n            insertImage(editor, url)\r\n          }}>{Icons.Image}</MarkButton>\r\n\r\n        <MarkButton click={\r\n          event => {\r\n            const url = window.prompt('Enter the URL of the video:')\r\n            if (url && !isUrl(url)) {\r\n              alert('URL is not an url')\r\n              return\r\n            }\r\n            insertVideo(editor, url)\r\n          }}>{Icons.Video}</MarkButton>\r\n\r\n        <BlockButton format=\"heading-one\" >T</BlockButton>\r\n        <BlockButton format=\"heading-two\" >S</BlockButton>\r\n        {/* <BlockButton format=\"block-quote\" >{Icons.Quote}</BlockButton>\r\n        <BlockButton format=\"numbered-list\" >{Icons.OrderedList}</BlockButton>\r\n        <BlockButton format=\"bulleted-list\" >{Icons.UnorderedList}</BlockButton> */}\r\n\r\n        <MarkButton click={\r\n          event => {\r\n            event.preventDefault()\r\n            let articleName = prompt(\"Seleccione el nombre del articulo\");\r\n            if (articleName) {\r\n              const article = { country: 'AR', name: articleName, cdsContent: '', content: value };\r\n              console.log(article);\r\n              addArticle(article)\r\n                .then(data => {\r\n                  console.log(\"data ok: \", data)\r\n                  alert(\"articulo guardado correctamente\");\r\n\r\n                })\r\n                .catch(error => alert(\"error: \" + alert.toString()));\r\n\r\n            }\r\n            else {\r\n              alert('no ingreso nombre');\r\n            }\r\n\r\n          }}>{Icons.Save}</MarkButton>\r\n\r\n        <MarkButton click={\r\n          event => {\r\n            event.preventDefault()\r\n            var requestOptions = {\r\n              method: 'GET',\r\n              redirect: 'follow'\r\n            };\r\n\r\n            fetch(\"https://beta.directv.com.co/coverage/Cds/Article/AEM\", requestOptions)\r\n              .then(response => {\r\n                if (response.ok) {\r\n                  response.text();\r\n                }\r\n                else {\r\n                  throw (\"Error\")\r\n                }\r\n\r\n              })\r\n              .then(result => {\r\n                console.log(result);\r\n                alert(\"enviado correctamente\")\r\n              })\r\n              .catch(error => {\r\n                console.log('error', error)\r\n                alert(\"Error enviando\")\r\n              });\r\n\r\n          }}>Enviar a AEM</MarkButton>\r\n      </Menu>\r\n      <Editable\r\n\r\n        editor={editor}\r\n        renderElement={renderElement}\r\n        renderLeaf={renderLeaf}\r\n        onKeyDown={event => {\r\n          console.log(value);\r\n          const content = JSON.stringify(value)\r\n          localStorage.setItem('content', content)\r\n          if (!event.ctrlKey) {\r\n            return\r\n          }\r\n\r\n          switch (event.key) {\r\n            case '`': {\r\n              event.preventDefault()\r\n              CustomEditor.toggleCodeBlock(editor)\r\n              break\r\n            }\r\n\r\n            case 'b': {\r\n              event.preventDefault()\r\n              CustomEditor.toggleBoldMark(editor)\r\n              break\r\n            }\r\n          }\r\n\r\n\r\n        }}\r\n      />\r\n    </Slate>\r\n  )\r\n}\r\n\r\nexport default RichTextEditor;\r\n\r\nconst withImages = editor => {\r\n  const { insertData, isVoid } = editor;\r\n\r\n  editor.isVoid = element => {\r\n    return element.type === 'image' ? true : isVoid(element);\r\n  }\r\n\r\n  editor.insertData = data => {\r\n    const text = data.getData('text/plain');\r\n    const { files } = data;\r\n\r\n    if (files && files.length > 0) {\r\n      for (const file of files) {\r\n        const reader = new FileReader();\r\n        const [mime] = file.type.split('/');\r\n\r\n        if (mime === 'image') {\r\n          reader.addEventListener('load', () => {\r\n            const url = reader.result;\r\n            insertImage(editor, url);\r\n          })\r\n\r\n          reader.readAsDataURL(file);\r\n        }\r\n      }\r\n    } else if (isImageUrl(text)) {\r\n      insertImage(editor, text);\r\n    } else {\r\n      insertData(data);\r\n    }\r\n  }\r\n  return editor;\r\n}\r\n\r\n\r\nconst insertImage = (editor, url) => {\r\n  const text = { text: '' }\r\n  const image = { type: 'image', url, children: [text] }\r\n  Transforms.insertNodes(editor, image)\r\n}\r\n\r\nconst insertVideo = (editor, url) => {\r\n  const text = { text: '' }\r\n  const image = { type: 'iframe', url, children: [text] }\r\n  Transforms.insertNodes(editor, image)\r\n}\r\n\r\nconst CustomEditor = {\r\n  isBoldMarkActive(editor) {\r\n    const [match] = Editor.nodes(editor, {\r\n      match: n => n.bold === true,\r\n      universal: true,\r\n    })\r\n\r\n    return !!match\r\n  },\r\n  isItalicMarkActive(editor) {\r\n    const [match] = Editor.nodes(editor, {\r\n      match: n => n.italic === true,\r\n      universal: true,\r\n    })\r\n\r\n    return !!match\r\n  },\r\n\r\n  isUnderlineMarkActive(editor) {\r\n    const [match] = Editor.nodes(editor, {\r\n      match: n => n.underline === true,\r\n      universal: true,\r\n    })\r\n\r\n    return !!match\r\n  },\r\n\r\n  isCodeBlockActive(editor) {\r\n    const [match] = Editor.nodes(editor, {\r\n      match: n => n.code === true,\r\n      universal: true,\r\n    })\r\n\r\n    return !!match\r\n  },\r\n\r\n  toggleBoldMark(editor) {\r\n    const isActive = CustomEditor.isBoldMarkActive(editor)\r\n    Transforms.setNodes(\r\n      editor,\r\n      { bold: isActive ? null : true },\r\n      { match: n => Text.isText(n), split: true }\r\n    )\r\n  },\r\n  toggleItalicMark(editor) {\r\n    const isActive = CustomEditor.isItalicMarkActive(editor)\r\n    Transforms.setNodes(\r\n      editor,\r\n      { italic: isActive ? null : true },\r\n      { match: n => Text.isText(n), split: true }\r\n    )\r\n  },\r\n\r\n  toggleUnderlineMark(editor) {\r\n    const isActive = CustomEditor.isUnderlineMarkActive(editor)\r\n    Transforms.setNodes(\r\n      editor,\r\n      { underline: isActive ? null : true },\r\n      { match: n => Text.isText(n), split: true }\r\n    )\r\n  },\r\n\r\n  toggleCodeBlock(editor) {\r\n    const isActive = CustomEditor.isUnderlineMarkActive(editor)\r\n    Transforms.setNodes(\r\n      editor,\r\n      { code: isActive ? null : true },\r\n      { match: n => Text.isText(n), split: true }\r\n    )\r\n  },\r\n}\r\n\r\nconst initialValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      { text: 'This is editable ' },\r\n      { text: 'rich', bold: true },\r\n      { text: ' text, ' },\r\n      { text: 'much', italic: true },\r\n      { text: ' better than a ' },\r\n      { text: '<textarea>', underline: true },\r\n      { text: '!' },\r\n    ],\r\n  },\r\n  {\r\n    type: 'h2',\r\n    children: [\r\n      { text: 'Titulo' },\r\n\r\n    ],\r\n  },\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text:\r\n          \"Since it's rich text, you can do things like turn a selection of text \",\r\n      },\r\n      { text: 'bold', bold: true },\r\n      {\r\n        text:\r\n          ', or add a semantically rendered block quote in the middle of the page.',\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    type: 'paragraph',\r\n    children: [{ text: 'Try it out for yourself!' }],\r\n  },\r\n]\r\n\r\n","import './App.css';\nimport RichTextEditor from './Components/Slate/RichTextEditor';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App-container\">\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/\">\n              <h1>Rich Text</h1>\n              <RichTextEditor />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}